Vim filetype plugin file for adding getter/setter methods
Language:	PHP
Maintainer: Jesus Arnaiz
Last Change: 2015 Nov
Revision: $Id$
Credit:
   - It's modification php_getset.vim by Antoni Jakubiak

=======================================================================

Commands:
  :InsertGetterOnly
      Inserts a getter for the property on the current line, or the
      range of properties specified via a visual block or x,y range
      notation.  The user is not prompted.

  :InsertSetterOnly
      Inserts a setter for the property on the current line, or the
      range of properties specified via a visual block or x,y range
      notation.  The user is not prompted.

  :InsertGetterSetter
      Inserts a getter and setter for the property on the current line,
      or the range of properties specified via a visual block or x,y
      range notation.  The user is not prompted.


Mappings:
  The following mappings are pre-defined.


  <Leader>ig
      Inserts a getter for the property on the current line, or the
      range of properties specified via a visual block.  User is not
      prompted.

  <Leader>is
      Inserts a getter for the property on the current line, or the
      range of properties specified via a visual block.  User is not
      prompted.

  <Leader>ib
      Inserts both a getter and setter for the property on the current
      line, or the range of properties specified via a visual block.
      User is not prompted.

Variables:
  The following variables allow you to customize the behavior of this
  script so that you do not need to make changes directly to the script.
  These variables can be set in your vimrc.

  maplocalleader
    By default, the key mappings defined by this script use
    <Leader> which is the backslash character by default.  You can
    change this by setting this variable to a different key.  For
    example, if you want to use the comma-key, you can add this line to
    your vimrc:

        let mapleader = ','

  g:phpgetset_insertPosition
    This variable determines the location where the getter and/or setter
    will be inserted.  Currently, three positions have been defined:

        0 - insert at the end of the class (default)
        1 - insert before the current line / block
        2 - insert after the current line / block

  g:phpgetset_getterTemplate
  g:phpgetset_setterTemplate
    These variables determine the text that will be inserted for a
    getter, setter, array-based getter, and array-based setter
    respectively.  The templates may contain the following placeholders
    which will be substituted by their appropriate values at insertion
    time:

        %varname%       The name of the property
        %funcname%      The method name ("getXzy" or "setXzy")

    For example, if you wanted to set the default getter template so
    that it would produce the following block of code for a property
    defined as "var $name":

        /**
         * Get name.
         * @return name
         */
       function getName() { return $this->name; }

    This block of code can be produced by adding the following variable
    definition to your vimrc file.

        let g:phpgetset_getterTemplate =
          \ "\n" .
          \ "/**\n" .
          \ " * Get %varname%.\n" .
          \ " * @return %varname%\n" .
          \ " */\n" .
          \ "%function %funcname%() { return $this->%varname%; }"

    The defaults for these variables are defined in the script.  For
    both the getterTemplate and setterTemplate, there is a corresponding
    array-baded template that is invoked if a property is array-based.
    This allows you to set indexed-based getters/setters if you desire.
    This is the default behavior.
